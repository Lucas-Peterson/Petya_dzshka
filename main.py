import logging
from aiogram import Bot, Dispatcher, executor
from aiogram.dispatcher.filters import Text
from aiogram import types

bot = Bot(token="5297937415:AAHQwWuf2AePeLVbREsBPV07xGknYVdSyv8")

dp = Dispatcher(bot)

logging.basicConfig(level=logging.INFO)

@dp.message_handler(commands="test1")
async def cmd_test1(message: types.Message):
    await message.reply("Test 1")

async def cmd_test2(message: types.Message):
    await message.reply("Test 2")

dp.register_message_handler(cmd_test2, commands="test2")


@dp.message_handler(text=("Start"))
async def cmd_start(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞üìï", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞üñ•", "–†—É—Å—Å–∫–∏–πü™∂", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—èüåç", "–•–∏–º–∏—èüë©‚Äçüî¨", "–ë–∏–æ–ª–æ–≥–∏—èüå±", "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µüßë‚ÄçÔ∏è", "–ü–ª–∞–Ω—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞üßëüèº‚Äçüíª", "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞üë®üèº‚Äçüíª", "Payüí∏" ]
    keyboard.add(*buttons)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–≤–æ–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—Å–∫–æ—Ä–µ —Å–¥–µ–ª–∞–Ω—ã –∫–∞–∫ –≤–∏–¥–∂–µ—Ç, –Ω–æ –ø–æ–∫–∞ –≤–æ—Ç —Ç–∞–∫.", reply_markup=keyboard)

@dp.message_handler(Text(equals="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞üìï"))
async def with_puree(message: types.Message):
    await message.reply("–¢–≤–æ—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞!")

@dp.message_handler(lambda message: message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞üñ•")
async def without_puree(message: types.Message):
    await message.reply("–í–æ—Ç —Ç–≤–æ—è –¥–∑!")

@dp.message_handler(Text(equals="–†—É—Å—Å–∫–∏–πü™∂"))
async def with_puree(message: types.Message):
    await message.reply("Do you speak russia?")

@dp.message_handler(lambda message: message.text == "–ì–µ–æ–≥—Ä–∞—Ñ–∏—èüåç")
async def without_puree(message: types.Message):
    await message.reply("–¢—ã –ø–æ–º–Ω–∏—à—å, –≥–¥–µ —ç–∫–≤–∞—Ç–æ—Ä?ü§®")

@dp.message_handler(Text(equals="–•–∏–º–∏—èüë©‚Äçüî¨"))
async def with_puree(message: types.Message):
    await message.reply("–¢–≤–æ—è —Ö–∏–º–∏—è!")

@dp.message_handler(lambda message: message.text == "–ë–∏–æ–ª–æ–≥–∏—èüå±")
async def without_puree(message: types.Message):
    await message.reply("–ë–∏–æ–ª–∏–≥–∏—èüëâüëà")

@dp.message_handler(Text(equals="–ü–ª–∞–Ω—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞üßëüèº‚Äçüíª"))
async def with_puree(message: types.Message):
    await message.reply("1. –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ñ–æ—Ç–æ–∫. " 
                        "2. –ü—Ä–∏–¥—É–º–∞—Ç—å –∫–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –æ–ø–ª–∞—Ç—É –¥–∞–Ω–∏ –≤–µ–ª–∏–∫–æ–º—É –ö–∞–∑–∞—Ä—É –ú–∞–∑–∞—Ä–æ–≤—É –∏ —á—Ç–æ–± –≤–∞–º –±—ã–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –µ–≥–æ —É—Å–ª—É–≥–∏." 
                        "3. –ë–æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä 4.–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É 5. –ü–æ–ª—É—á–∏—Ç—å –∑–ø. "
                        "6. –°–æ–∑–¥–∞–Ω–∏–µ –±–ª—ç–∫–¥–∂–µ–∫–∞ —Å–æ —à–ª—é—Ö–∞–º–∏ (–®–ª—é—Ö –º–æ–∂–µ—Ç –∏ –Ω–µ –±—É–¥–µ—Ç, –Ω–æ –±–ª—ç–∫–¥–∂–µ–∫ –Ω–∞–≤–µ—Ä–Ω—è–∫–∞")

@dp.message_handler(lambda message: message.text == "–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞üë®üèº‚Äçüíª")
async def without_puree(message: types.Message):
    await message.reply("–ó–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ –±—ã–ª c–æ–∑–¥–∞–Ω –∏ –ø—Ä–æ—Ö–æ–¥—è—â–∏–π —Ç–µ—Å—Ç—ã –ø–µ—Ä–≤—ã–π inline (–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∫–æ–º–∞–Ω–¥–µ /inline)."
                        " –ë—ã–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π.–¢–∞–∫–∂–µ —Å–∫–æ—Ä–æ –æ–∂–∏–¥–∞–µ—Ç—Å—è –º–∞—Å—à–∞—Ç–±–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –∏–∑–º–µ–Ω–∏–µ–º –º–µ–Ω—é –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ —Å —Ç–µ—Å—Ç–æ–º –Ækassa. "
                        "–¢–µ–ø–µ—Ä—å –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫–µ –≤–µ—Å–∏—Ç —Ñ–ª–∞–≥ –∏–º–ø–µ—Ä–∏–∏ –∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ /slogan –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Å–ª–æ–≥–∞–Ω –∫–æ–º–ø–∞–Ω–∏–∏")

@dp.message_handler(Text(equals="Payüí∏"))
async def with_puree(message: types.Message):
    await message.reply('<a href="https://yookassa.ru/developers/payment-acceptance/getting-started/payment-methods">–†–µ–∫–≤–∏–∑–∏—Ç—ã –æ–ø–ª–∞—Ç—ã</a>',parse_mode="HTML")

@dp.message_handler(lambda message: message.text == "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µüßë‚ÄçÔ∏è")
async def without_puree(message: types.Message):
    await message.reply("–¢—ã —Å—Ç–∞–Ω–µ—à—å –º–æ–∏–º –∞–¥–≤–æ–∫–∞—Ç–æ–º?")

if __name__ == "__main__":

    executor.start_polling(dp, skip_updates=True)